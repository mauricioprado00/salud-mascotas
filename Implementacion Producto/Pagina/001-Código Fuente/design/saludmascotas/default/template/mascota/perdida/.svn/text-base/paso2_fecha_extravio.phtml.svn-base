<?php //útf8 
$perdida = $this->getPerdida();
$extravio_fecha = $perdida->getExtravioFecha();
$extravio_hora = $perdida->getExtravioHora();

?>
			<div class="textbox">
				<div class="holding share_row half_size extravio_fecha">
					<div class="input_autocomplete">
						<?php
							$input = Core::getObject('Core_Html_Tag_Custom', 'input');
							$input
								->setMaxlength(20)
								->setType('text')
								->setAutocomplete('off')
								->setTitle('Fecha de Extravío')
								->setClass('datepicker')
								->setName('extravio_fecha')
								->setId('extravio_fecha')
								->setValue($extravio_fecha)
							;
							echo $input->getHtml();
						?>
						<!--<input type="text" autocomplete="off" title="extravio_fecha" name="extravio_fecha" id="extravio_fecha" value="">
						<div class="dropdown_button"></div>
						-->
					</div>
					<span class="holder">Fecha de Extravío</span>
				</div>
				<div class="holding share_row half_size extravio_hora">
					<?php
						$input = Core::getObject('Core_Html_Tag_Custom', 'input');
						$input
							->setMaxlength(300)
							->setType('text')
							->setClass('timepicker')
							->setAutocomplete('on')
							->setTitle('Hora Extravío')
							->setName('extravio_hora')
							->setId('extravio_hora')
							->setValue($extravio_hora)
						;
						echo $input->getHtml();
						//<input type="text" autocomplete="on" title="extravio_hora" name="extravio_hora" value="">
					?> 
					<span class="holder">Hora Extravío</span>
					<span class="help">Indicanos cuanto hace que la viste en ese lugar</span>
				</div>
				
				<div style="clear:both;"></div>
			</div>
			
		<script type="text/javascript">
		jQuery(document).ready(function(){
			jQuery('.datepicker').datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
			jQuery('.timepicker').timepicker({
			    // Options
			    timeSeparator: ':',           // The character to use to separate hours and minutes. (default: ':')
			    showLeadingZero: true,        // Define whether or not to show a leading zero for hours < 10. (default: true)
			    showMinutesLeadingZero: true, // Define whether or not to show a leading zero for minutes < 10. (default: true)
			    showPeriod: false,            // Define whether or not to show AM/PM with selected time. (default: false)
			    showPeriodLabels: true,       // Define if the AM/PM labels on the left are displayed. (default: true)
			    periodSeparator: ' ',         // The character to use to separate the time from the time period.
			    altField: '#alternate_input', // Define an alternate input to parse selected time to
			    defaultTime: '12:34',         // Used as default time when input field is empty or for inline timePicker
			                                  // (set to 'now' for the current time, '' for no highlighted time, default value: now)
			
			    zIndex: null,                 // Overwrite the default zIndex used by the time picker
			
			    // trigger options
			    showOn: 'focus',              // Define when the timepicker is shown.
			                                  // 'focus': when the input gets focus, 'button' when the button trigger element is clicked,
			                                  // 'both': when the input gets focus and when the button is clicked.
			    button: null,                 // jQuery selector that acts as button trigger. ex: '#trigger_button'
			
			    // Localization
			    hourText: 'Hora',             // Define the locale text for "Hours"
			    minuteText: 'Minuto',         // Define the locale text for "Minute"
			    amPmText: ['AM', 'PM'],       // Define the locale text for periods
			
			    // Events
//			    onSelect: onSelectCallback,   // Define a callback function when an hour / minutes is selected.
//			    onClose: onCloseCallback,     // Define a callback function when the timepicker is closed.
//			    onHourShow: onHourShow,       // Define a callback to enable / disable certain hours. ex: function onHourShow(hour)
//			    onMinuteShow: onMinuteShow,   // Define a callback to enable / disable certain minutes. ex: function onMinuteShow(hour, minute)
			
			    // custom hours and minutes
			    hours: {
			        starts: 0,                  // first displayed hour
			        ends: 23                    // last displayed hour
			    },
			    minutes: {
			        starts: 0,                  // first displayed minute
			        ends: 55,                   // last displayed minute
			        interval: 5                 // interval of displayed minutes
			    },
			    rows: 4                         // number of rows for the input tables, minimum 2, makes more sense if you use multiple of 2
			});
		});
		</script>