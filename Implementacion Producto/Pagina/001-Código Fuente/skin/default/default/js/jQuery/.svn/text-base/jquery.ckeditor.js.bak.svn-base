(function($) {
	
	// global $ methods for blocking/unblocking the entire page
	$.ckeditor = {
		'overload': function(){
			try{
				for(name in CKEDITOR.instances)
					CKEDITOR.remove(CKEDITOR.instances[name]);
				$('.ckeditor').each(function(){
					CKEDITOR.replace( this.id );
			        $(this).removeClass('ckeditor');
				});
	
			}catch(e){
				setTimeout(window.ckoverload, 100);
			}
		},
		'refresh': function(){
			// Remove old non-existing editors from memory
			for(var name in CKEDITOR.instances){
				if(jQuery('#'+name).length==0)
				 delete CKEDITOR.instances[name];
			};
			
			// loop through editors
			for(var name in CKEDITOR.instances){
				var instancia = CKEDITOR.instances[name];
				var data = instancia.getData(true);//this.content(name);
				var area = jQuery('#'+name);
				area.text( data );
			};
		}
	}
})(jQuery);
